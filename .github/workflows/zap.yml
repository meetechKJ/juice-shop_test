name: ZAP Security Scan (Development Mode)

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  zap_scan:
    runs-on: ubuntu-latest
    name: ZAP Security Scan
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'  # Node 20を使用
    
    - name: Install dependencies
      run: |
        echo "Installing dependencies..."
        npm install
        echo "Dependencies installed successfully"
    
    # 開発モードでの起動を試行
    - name: Start Juice Shop (Development Mode)
      run: |
        echo "Starting Juice Shop in development mode..."
        
        # 環境変数の設定
        export NODE_ENV=development
        export PORT=3000
        export SOLUTIONS_WEBHOOK=""
        export CHATBOT_WEBHOOKS=""
        
        # TypeScriptのビルドをスキップしてJavaScriptで直接実行
        if [ -f "server.ts" ]; then
          echo "Using TypeScript server..."
          npx ts-node server.ts &
        elif [ -f "server.js" ]; then
          echo "Using JavaScript server..."
          node server.js &
        elif [ -f "build/app.js" ]; then
          echo "Using built application..."
          node build/app.js &
        else
          echo "Trying npm start..."
          npm start &
        fi
        
        JUICE_PID=$!
        echo "Application started with PID: $JUICE_PID"
        
        # 起動確認
        echo "Waiting for application to start..."
        for i in {1..30}; do
          if curl -s http://localhost:3000 >/dev/null 2>&1; then
            echo "Application is ready!"
            curl -I http://localhost:3000
            break
          fi
          echo "Waiting... ($i/30)"
          sleep 6
        done
        
        # 最終確認
        if ! curl -f http://localhost:3000 >/dev/null 2>&1; then
          echo "Application failed to start properly"
          echo "Process status:"
          ps aux | grep -E "(node|juice)" | head -10
          echo "Port status:"
          netstat -tlnp | grep 3000 || echo "Port 3000 not in use"
          exit 1
        fi
    
    - name: Health check
      run: |
        echo "Performing health check..."
        response=$(curl -s -o /dev/null -w "%{http_code}" http://localhost:3000)
        echo "HTTP response code: $response"
        if [ "$response" != "200" ]; then
          echo "Health check failed with code: $response"
          exit 1
        fi
        echo "Health check passed"
    
    - name: ZAP Baseline Scan
      uses: zaproxy/action-baseline@v0.12.0
      with:
        target: 'http://localhost:3000'
        rules_file_name: '.zap/rules.tsv'
        cmd_options: '-a -m 15 -d'  # -d: デバッグモード
    
    - name: Upload ZAP results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: zap-results-${{ github.run_number }}
        path: |
          report_html.html
          report_md.md
          report_json.json
        retention-days: 30
